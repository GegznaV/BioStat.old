% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_numbers.R
\name{format_numbers}
\alias{format_numbers}
\title{Format Numbers in Columns of a Dataframe}
\usage{
format_numbers(data, digits = 3, format = "f", fun = formatC, ...)
}
\arguments{
\item{data}{A data frame.}

\item{digits}{(numeric or \code{NA}) a desired number of digits after the decimal point (if \code{format = "f"}) or a number of significant digits (\code{format = "g"}, \code{= "e"} or \code{= "fg"}). \cr
Either one integer (to set the same formatting for all columns) or a vector of inegers (to set formatting for each column separately).\cr
Use \code{NA} to leave column unformatted.}

\item{format}{(character) \code{"f"}, \code{"g"}, \code{"e"}, \code{"fg"}. Either one value or a vector of values for each column.
Each value will be passed to \code{fun} separately.\cr
\code{"f"} gives numbers in the usual \code{xxx.xxx} format;\cr
\code{"e"} and \code{"E"} give \code{n.ddde+nn} or \code{n.dddE+nn} (scientific format);\cr
\code{"g"} and \code{"G"} put number into scientific format only if it saves space to do so.\cr
\code{"fg"} uses fixed format as \code{"f"}, but digits as the minimum number of significant digits. This can lead to quite long result strings}

\item{fun}{A function that does the formatting.
Default is \code{\link[base]{formatC}}.}

\item{...}{Other parameters to be passed to \code{fun}.}
}
\description{
Function formats numeric columns only.
Other classes are left intact.
}
\examples{
library(BioStat)
DATA <- head(iris)

# The same rounding for each column
format_numbers(DATA, 2)

# Different rounding for different columns
format_numbers(DATA, c(2,2,3,3,NA))

# Use `NA` to leave a column unformatted
format_numbers(DATA, c(4,NA,3,NA,NA))
}
